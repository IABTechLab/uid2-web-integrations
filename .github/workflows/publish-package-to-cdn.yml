name: Release SDK to NPM and CDN (v2)
run-name: ${{ inputs.release_type == 'Snapshot' && 'Publish Pre-release' || format('Release {0}', inputs.release_type)}} SDK Package to NPM and CDN by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        description: The type of release
        options:
          - Major
          - Minor
          - Patch
          - Snapshot
        required: true
      with_tag:
        description: By default, running npm publish will tag your package with the latest dist-tag. To use another dist-tag, please add tag here
        required: false
      publish_to_npm:
        type: boolean
        description: Publish package to NPM (In general, always release to both)
        required: false
        default: true
      publish_to_cdn:
        type: boolean
        description: Publish package to CDN (In general, always release to both)
        required: false
        default: true

jobs:
  incrementVersionNumber:
    uses: IABTechLab/uid2-shared-actions/.github/workflows/shared-increase-version-number.yaml@v2
    with:
      release_type: ${{ inputs.release_type }}
    secrets: inherit

  build:
    runs-on: ubuntu-latest
    needs: [incrementVersionNumber]
    strategy:
      matrix:
        node-version: [20.x]
        target: [development, production]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.incrementVersionNumber.outputs.git_tag_or_hash }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get Package Version
        id: version
        run: |
          echo "package_version=$(cat package.json | jq -r '.version')" >> $GITHUB_OUTPUT
      - name: Install dependencies
        run: npm install
      - name: Build script
        run: npm run build -- --mode=${{ matrix.target }}
      - uses: actions/upload-artifact@v4
        if: inputs.publish_to_cdn
        with:
          name: uid2SDK-${{ matrix.target }}-${{ steps.version.outputs.package_version }}
          path: ./dist/uid2-sdk-${{ steps.version.outputs.package_version }}.js
      - uses: actions/upload-artifact@v4
        if: inputs.publish_to_cdn
        with:
          name: euidSDK-${{ matrix.target }}-${{ steps.version.outputs.package_version }}
          path: ./dist/euid-sdk-${{ steps.version.outputs.package_version }}.js
    outputs:
      sdkVersion: ${{ steps.version.outputs.package_version }}

  createNpmJsRelease:
    needs: [incrementVersionNumber, build]
    runs-on: ubuntu-latest
    steps:
      - name: Build Changelog
        id: github_release_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          toTag: v${{ needs.incrementVersionNumber.outputs.new_version }}
          configurationJson: |
            {
              "pr_template": " - #{{TITLE}} - ( PR: ##{{NUMBER}} )"
            }
      - name: Create Release Notes
        uses: softprops/action-gh-release@v2
        with:
          name: v${{ needs.incrementVersionNumber.outputs.new_version }}
          body: ${{ steps.github_release_changelog.outputs.changelog }}
          draft: true

  publish-package:
    if: inputs.publish_to_npm
    needs: [build, incrementVersionNumber]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.incrementVersionNumber.outputs.git_tag_or_hash }}
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          scope: uid2
      - run: npm ci
      - name: Build package
        run: npm run build-package
      - name: Publish Latest package
        if: ${{!github.event.inputs.with_tag}}
        run: |
          npm publish ./dist/uid2-npm --access public
          npm publish ./dist/euid-npm --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish Latest package with tag
        if: ${{github.event.inputs.with_tag}}
        run: |
          npm publish ./dist/uid2-npm --tag ${{github.event.inputs.with_tag}} --access public
          npm publish ./dist/euid-npm --tag ${{github.event.inputs.with_tag}} --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Test Environment - UID2 only first
  cdn-deployment-test:
    if: inputs.publish_to_cdn
    needs: [build, incrementVersionNumber]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment: uid2-test
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.incrementVersionNumber.outputs.git_tag_or_hash }}
      - uses: ./.github/actions/cdn_deployment_aws
        with:
          artifact: uid2SDK-development-${{ needs.build.outputs.sdkVersion}}
          invalidate_paths: '/uid2-sdk-${{ needs.build.outputs.sdkVersion}}.js'
          aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          aws_bucket_name: ${{ secrets.S3_BUCKET }}
          aws_distribution_id: ${{ secrets.AWS_DISTRIBUTION_ID }}
          deploy_index_html: 'true'

  approval-to-deploy:
    name: Approval To Deploy
    needs: [cdn-deployment-test]
    runs-on: ubuntu-latest
    environment: approve-deployment
    steps:
      - name: Approval to deploy
        shell: bash
        run: echo "Approved"

  # Consolidated CDN Deployment with Matrix
  cdn-deployment:
    if: inputs.publish_to_cdn
    needs: [build, incrementVersionNumber, approval-to-deploy]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    strategy:
      matrix:
        include:
          # UID2 Environments
          - product: uid2
            github_env: uid2-integ
            build_type: development
          - product: uid2
            github_env: uid2-prod
            build_type: production
          # EUID Environments
          - product: euid
            github_env: euid-integ
            build_type: development
          - product: euid
            github_env: euid-prod
            build_type: production
    environment: ${{ matrix.github_env }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.incrementVersionNumber.outputs.git_tag_or_hash }}
      - uses: ./.github/actions/cdn_deployment_aws
        with:
          artifact: ${{ matrix.product }}SDK-${{ matrix.build_type }}-${{ needs.build.outputs.sdkVersion}}
          invalidate_paths: '/${{ matrix.product }}-sdk-${{ needs.build.outputs.sdkVersion}}.js'
          aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          aws_bucket_name: ${{ secrets.S3_BUCKET }}
          aws_distribution_id: ${{ secrets.AWS_DISTRIBUTION_ID }}
          deploy_index_html: 'true'
